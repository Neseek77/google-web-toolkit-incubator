/*
 * Copyright 2008 Google Inc.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
 
/*
 * Using CssResource, we can be as liberal with comments and whitespace as
 * we want to, because the CSS will be minified.
 */
 
/*
 * This is a static definition.
 */
@def H1COLOR orange;

body {
  background: black;
  direction: ltr;
}

@sprite .logoBig {
  gwt-image: "logo";
  float: right;
} 

@sprite .logoSmall {
  gwt-image: "logoSmall";
}

@sprite .logoTiny {
  gwt-image: "logoTiny";
  position: absolute;
}

.contentArea {
  padding: value('topBorder.getHeight', 'px') value('rightBorder.getWidth', 'px')
      value('bottomBorder.getHeight', 'px') value('leftBorder.getWidth', 'px');
  background: white;
  position: absolute;
  top: 50px;
  left: 50px;
  right: 50px;
  bottom: 50px;
  border: 1px solid orange;
  text-indent: value('logoTiny.getWidth', 'px');
}

@sprite .contentAreaTopBorder {
  gwt-image: 'topBorder';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
}

@sprite .contentAreaBottomBorder {
  gwt-image: 'bottomBorder';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
}


@sprite .contentAreaLeftBorder {
  gwt-image: 'leftBorder';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
}

@sprite .contentAreaRightBorder {
  gwt-image: 'rightBorder';
  position: absolute;
  top: 0;
  right: 0;
  height: 100%;
}

h1 {
 color: H1COLOR;
}

/*
 * Many stylesheets include somewhat baroque selector lists in order to
 * prevent rules from being applied on some subset of browsers.  The @if
 * rule allows for intent to be specified, while also allowing the overall
 * amount of code delivered to the client to be minimized.
 */
@if !user.agent ie6 {
  h1:after {
    content: "Now with CssResource!";
    font-size: small;
    vertical-align: super;
    text-shadow: 2px 2px 3px gold;
  }
}

/*
 * We'll have fun with advanced WebKit-based transforms, but other browsers
 * won't pay the price for CSS they don't interpret.
 */
@if user.agent safari {
  h1 {
     /* The leading slash is needed to make this a valid css2 ident. */
     \-webkit-transform: rotate(-5deg);
     padding-bottom: 60px;
  }
}

@noflip {
  .ltrSwitch {
    position: absolute;
    left: value('leftBorder.getWidth', 'px');
    bottom: value('bottomBorder.getHeight', 'px');
  }
  
  .rtlSwitch {
    position: absolute;
    right: value('rightBorder.getWidth', 'px');
    bottom: value('bottomBorder.getHeight', 'px');
  }
}