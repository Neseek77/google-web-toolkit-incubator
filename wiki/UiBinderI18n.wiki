#summary GWT UiBinder i18n use cases

Ray Ryan <br />
freely plagiarizing from the brilliant minds behind [http://code.google.com/p/gxp/ gxp]

This document explores internationalization use cases supported the GWT UiBinder. 

= Background =

The basic idea is that the localizable bits of your ui.xml template file are marked up as such. When the UiBinder code generator processes the template, it gathers these and creates an interface  extends com.google.gwt.i18.client.Messages. You then provide localized versions of these messages as you would for any other portion of your app. (See the Binding to Properties Files section of the [http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/i18n/client/Messages.html Messages javadoc].)

Values for annotations that apply at the Messages interface level are set as attributes on the root element. Here is an example with all possible values set (normally you'd let some of these default).

{{{
<ui:UiBinder
  xmlns:ui='urn:ui:com.google.gwt.uibinder'

  ui:defaultLocale="en_us"
  ui:generateKeys="com.my.app.KeyGenerator"
  ui:generateFormat="com.my.app.MessageCatalogFormat1, com.my.app.MessageCatalogFormat2"
  ui:generateFilename="myapp_translate_source"
  ui:generateLocales="default"
> 
}}}

= Open Issues =

Support for Constants and ConstantsWithLookup is not yet designed.

PluralText is theoretically supported, but untested.

So far, I have found no use for Gxp's <ui:eph/> element. Is it really not needed, or do I just lack imagination?

Unannotated user visible text is allowed--a feature is needed to make this a compile time error.

= Complete sentence or headline with no internal tags. =

*Original*
{{{
<h1>User Account Management.</h1>
}}}

*Tagged* 
{{{
<h1>
  <ui:msg description="Title of UAM page">User Account Management.</ui:msg>
</h1>
}}}


*Generated*
{{{
public class MyUiBinderImpl implements MyUiBinder {
  static final MyUiMessages messages = GWT.create(MyUiMessages.class);

  void bindUi(MyUi myUi) {
    HTML html = new HTML();
    html.setHtml("<h1>" + messages.message1() + "</h1>");
    myUi.setElement(html.getElement());
  }
}

@DefaultLocale("en_US")
@GenerateKeys
@GeneratedFrom("com.foo.bar.MyUi.ul.xml")
public interface MyUiMessages extends com.google.gwt.i18.client.Messages {
  @DefaultMessage("User Account Management.")
  @Description("Title of UAM page")
  String message1();
}
}}}

*Explanation*

This is the hello world caseâ€š a simple, unparametrized string.

= Simple HTML tags inside message =

*Original*
{{{
We <b>strongly</b> urge you to reconsider.
}}}

*Tagged* 
{{{
<ui:msg>We <b>strongly</b> urge you to reconsider.</ui:msg>
}}}

*Generated*

As above

*Explanation*

Simple formatting is reasonable to put in front of a translator, and
so UiBinder supports html in messages, not just text.