#summary New Widget - A two part table with a fixed header and scrollable data area

= Introduction =
The ScrollTable Widget is a two part table consisting of a fixed header table and a scrollable data grid.  The header table is an extension of the FlexTable, so it supports rowspans and colspans.  The data portion is an extension of the grid.

In addition to the scrolling feature, the ScrollTable supports many other features.  The data portion supports hovering and selecting rows.  Users can decide between a single or multi row selection policy.  The header table supports mouse resizing.  Users can click and drag the edge of a header cell to resize a column.  If the header cell spans multiple columns, the cells will be smartly resized proportional to their original widths.  Double-clicking on a header cell will auto-resize the column to fit all of its data content.  Click on a header cell will sort the data rows based on the selected column.  Clicking on the same cell again will reverse sort the rows.

All of the above features can be enabled or disabled, and they can be accessed programatically.

Example:
[http://google-web-toolkit-incubator.googlecode.com/svn/trunk/src/com/google/gwt/demos/ScrollTable/index.html]


= Setup Instructions =

The ScrollTable Widget requires some setup to handle changes in the existing GWT API.  The following changes will override the existing GWT classes.

These changes apply to eclipse:
  # Right click on the Incubator project and select Properties
  # In the Java Build Path, click on the "Link Source" button
  # Enter the location "<path to project>/trunk/src/com/google/gwt/widgetideas/jlabanca"
  # Enter the folder name "jlabanca" and click Finish
  # Back in the Java Build Path, click on the src folder and select the Edit option
  # Add the exclusion pattern "com/google/gwt/widgetideas/jlabanca"

Add these line to your module.gwt.xml file:
{{{
  <inherits name='com.google.gwt.widgetideas.WidgetIdeas'/>
  <inherits name='com.google.gwt.widgetideas.ScrollTable'/>
}}}

The above lines will tell the GWT compiler how to map the super-source files described above.

Sorry about the long setup, but the Incubator doesn't provide an easy method to modify existing classes.


= CSS =

Here is an example CSS style for the Scrolltable Widget:
{{{
.gwt-ScrollTable {
  border: 5px solid #C3D9FF;
  border-right: 5px solid #7AA5D6;
  border-bottom: 5px solid #7AA5D6;
}
.gwt-ScrollTable .gwt-ScrollTable-data tr {
  background: #EAEAEA;
}
.gwt-ScrollTable .gwt-ScrollTable-data tr.gwt-ScrollTable-hover {
  background: #C3D9FF;
}
.gwt-ScrollTable .gwt-ScrollTable-data tr.gwt-ScrollTable-selected {
  background: #7AA5D6;
}
.gwt-ScrollTable .gwt-ScrollTable-data tr td {
  border: 2px solid white;
  border-bottom: 2px solid #666666;
  border-right: 2px solid #888888;
  white-space: nowrap;
  margin: 0px;
  overflow: hidden;
}
.gwt-ScrollTable .gwt-ScrollTable-header-wrapper {
  background: #E8EEF7;
  border-bottom: 1px solid #C3D9FF;
}
.gwt-ScrollTable .gwt-ScrollTable-header tr {
  background: #E8EEF7;
}
.gwt-ScrollTable .gwt-ScrollTable-header tr td {
  border: 2px solid transparent;
  border-right: 2px solid #7AA5D6;
  border-bottom: 2px solid #7AA5D6;
  white-space: nowrap;
  margin: 0px;
  overflow: hidden;
}
}}}


= Sample Code =

{{{
    ScrollTable myTable = new ScrollTable();

    // Setup the formatting
    myTable.setCellPadding(3);
    myTable.setCellSpacing(1);
    myTable.setSize("95%", "40%");
    
    // Level 1 headers
    FlexTable headerTable = myTable.getHeaderTable();
    FlexCellFormatter headerFormatter = headerTable.getFlexCellFormatter();
    headerTable.setHTML(0, 0, "Info Table");
    headerFormatter.setColSpan(0, 0, 13);
  
    // Level 2 headers
    headerTable.setHTML(1, 0, "Group Header 0<BR>Multiline");
    headerFormatter.setColSpan(1, 0, 2);
    headerFormatter.setRowSpan(1, 0, 2);
    headerTable.setHTML(1, 1, "Group Header 1");
    headerFormatter.setColSpan(1, 1, 3);
    headerTable.setHTML(1, 2, "Group Header 2");
    headerFormatter.setColSpan(1, 2, 1);
    headerFormatter.setRowSpan(1, 2, 2);
    headerTable.setHTML(1, 3, "Group Header 3");
    headerFormatter.setColSpan(1, 3, 1);
    headerFormatter.setRowSpan(1, 3, 2);
    headerTable.setHTML(1, 4, "Group Header 4");
    headerFormatter.setColSpan(1, 4, 3);
    headerTable.setHTML(1, 5, "Group Header 5");
    headerFormatter.setColSpan(1, 5, 3);
  
    // Level 3 headers 
    for (int cell = 0; cell < 9; cell++) {
      headerTable.setHTML(2, cell, "Header " + cell);
    }
  
    // Add some default data
    Grid dataTable = myTable.getDataTable();
    dataTable.resize(20, 13);
    for (int row = 0; row < 20; row++) {
      for (int cell = 0; cell < 13; cell++) {
        dataTable.setHTML(row, cell, row + ":" + cell);
      }
    }
}}}
 
 
 
 
 
 
 
 
 