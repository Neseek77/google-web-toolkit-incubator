#summary A two part table with a fixed header and scrollable data area
#labels Type-Widget

= Introduction =
The ScrollTable Widget is a two part table consisting of a fixed header table and a scrollable data grid.  The header table is an extension of the FlexTable, so it supports rowspans and colspans.  The data portion is an extension of the grid.

In addition to the scrolling feature, the ScrollTable supports many other features.  The data portion supports hovering and selecting rows.  Users can decide between a single or multi row selection policy.  The header table supports mouse resizing.  Users can click and drag the edge of a header cell to resize a column.  If the header cell spans multiple columns, the cells will be smartly resized proportional to their original widths.  Double-clicking on a header cell will auto-resize the column to fit all of its data content.  Click on a header cell will sort the data rows based on the selected column.  Clicking on the same cell again will reverse sort the rows.

All of the above features can be enabled or disabled, and they can be accessed programatically.

Example:
[http://google-web-toolkit-incubator.googlecode.com/svn/trunk/demo/ScrollTable/index.html]


= Setup Instructions =

Add these line to your module.gwt.xml file:
{{{
  <inherits name='com.google.gwt.widgetideas.WidgetIdeas'/>
  <inherits name='com.google.gwt.widgetideas.ScrollTable'/>
}}}



= CSS =

Here is an example CSS style for the Scrolltable Widget:
{{{
/**
 * ScrollTable
 */
.gwt-ScrollTable {
  border-color: #aaa;
  border-style: solid;
  border-width: 1px 0px 3px 1px;
}

.gwt-ScrollTable .gwt-ScrollTable-header-wrapper {
  background: #8bd url(images/bg_header_gradient.gif) repeat-x bottom left;
}

.gwt-ScrollTable .gwt-ScrollTable-footer-wrapper {
	border-top: 1px solid #aaa;
  background: #8bd url(images/bg_header_gradient.gif) repeat-x bottom left;
}

.gwt-ScrollTable .gwt-ScrollTable-data td,
.gwt-ScrollTable .gwt-ScrollTable-header td,
.gwt-ScrollTable .gwt-ScrollTable-footer td {
  border-color: #aaa;
  border-style: solid;
  border-width: 0px 1px 1px 0px;
  white-space: nowrap;
  overflow: hidden;
  padding: 3px;
}

.gwt-ScrollTable .gwt-ScrollTable-header td,
.gwt-ScrollTable .gwt-ScrollTable-footer td {
  color: #fff;
}
	
.gwt-ScrollTable .gwt-ScrollTable-data tr.selected {
  background: #7AA5D6;
}

.gwt-ScrollTable .gwt-ScrollTable-data tr.hovering {
  background: #C3D9FF;
}

.gwt-ScrollTable .gwt-ScrollTable-data td.hovering {
  border: 1px solid blue;
  cursor: hand;
  cursor: pointer;
}
}}}


= Sample Code =
See the demo code for a complete sample.

{{{
  /**
   * Add a row of data cells each consisting of a string that describes the
   * row:column coordinates of the new cell. The number of columns in the new
   * row will match the number of columns in the grid.
   * 
   * @param beforeRow the index to add the new row into
   */
  public static void insertDataRow(int beforeRow) {
    // Insert the new row
    beforeRow = dataTable.insertRow(beforeRow);

    // Set the data in the new row
    int numColumns = dataTable.getColumnCount();
    for (int column = 0; column < numColumns; column++) {
      String label = beforeRow + ":" + column;
      if (column == 0) {
        dataTable.setWidget(beforeRow, column, new CheckBox(label));
      } else if (column == 2) {
        int rand = (int) (Math.random() * 100000);
        dataTable.setHTML(beforeRow, column, rand + "");
      } else {
        dataTable.setHTML(beforeRow, column, label);
      }
    }
  }

  /**
   * This is the entry point method.
   */
  public void onModuleLoad() {
    // Create the inner tables
    getHeaderTable();
    getFooterTable();
    getDataTable();
    
    // Add the scroll table to the page
    headerTable = new FixedWidthFlexTable();;
    dataTable = new SortableFixedWidthGrid();
    dataTable.setHoveringPolicy(SelectionGrid.HOVERING_POLICY_ROW);
    footerTable = new FixedWidthGrid();
    scrollTable = new ScrollTable(dataTable, headerTable);
    scrollTable.setFooterTable(footerTable);

    // Setup the header
    setupScrollTable();
    
    // Add some data the data table
    dataTable.resize(0, 13);
    for (int i = 0; i < 15; i++) {
      insertDataRow(i);
    }
    
    // Add some data to the footer table
    footerTable.resize(1, 13);
    for (int i = 0; i < 13; i++) {
      footerTable.setText(0, i, "Col " + i);
    }

    // Redraw the scroll table
    scrollTable.redraw();
    
    // Add the components to the page
    RootPanel.get().add(scrollTable);
    RootPanel.get().add(new HTML("<BR>"));
    RootPanel.get().add(createTabPanel());
  }

  /**
   * Setup the scroll table.
   */
  private void setupScrollTable() {
    // Setup the formatting
    scrollTable.setSize("95%", "50%");
    scrollTable.setCellPadding(3);
    scrollTable.setCellSpacing(1);
    scrollTable.setResizePolicy(ScrollTable.RESIZE_POLICY_FILL_WIDTH);

    // Level 1 headers
    FlexCellFormatter headerFormatter = headerTable.getFlexCellFormatter();
    headerTable.setHTML(0, 0, "Info Table");
    headerFormatter.setColSpan(0, 0, 13);

    // Level 2 headers
    headerTable.setHTML(1, 0, "Group Header 0<BR>Multiline");
    headerFormatter.setColSpan(1, 0, 2);
    headerFormatter.setRowSpan(1, 0, 2);
    headerTable.setHTML(1, 1, "Group Header 1");
    headerFormatter.setColSpan(1, 1, 3);
    headerTable.setHTML(1, 2, "Group Header 2");
    headerFormatter.setColSpan(1, 2, 1);
    headerFormatter.setRowSpan(1, 2, 2);
    headerTable.setHTML(1, 3, "Group Header 3");
    headerFormatter.setColSpan(1, 3, 1);
    headerFormatter.setRowSpan(1, 3, 2);
    headerTable.setHTML(1, 4, "Group Header 4");
    headerFormatter.setColSpan(1, 4, 3);
    headerTable.setHTML(1, 5, "Group Header 5");
    headerFormatter.setColSpan(1, 5, 3);

    // Level 3 headers
    for (int cell = 0; cell < 9; cell++) {
      headerTable.setHTML(2, cell, "Header " + cell);
    }
  }
}}}
 
 
 
 
 
 
 
 
 