#summary DRAFT Proposed event system for widgets

= Introduction =

The current widget event system is very easy to use and understand, which are significant advantages. However, it has a reasonable number of disadvantages as well, therefore in this document we
  * Detail the disadvantages of the current listeners system.
  * Explain our proposed new handler system
  * Revisit the disadvantages of the current listener system and show how the handler system addresses each one. 



= Disadvantages of current listener system =
  # We cannot add extra information about an event. For example, we could not add native events to the current Click or Change listeners.
  # We cannot add a new feature to a current listener. For instance TreeListener cannot be expanded to allow more tree events.
  # Many widgets do not have any listeners, and yet have three or four listeners field that need to be null initialized.
  # We have to sink unnecessary events on widgets. For example to get a mouse down event, mouse move events are also sunk. 
  # Our users end up with many blank empty event methods or need to extend from Adaptor classes.
  # We repeat the same lines of boiler plate code in many different widgets to check if the listeners are instantiated and instantiate them.
= Proposed Handler System =
== Overview ==
  * Each handler has a single method, such as onClick, onMouseDown, etc.
  * Each handler has a single argument, which is exactly the handlerâ€™s corresponding event.  
  * Widget has the following methods
    * protected addHandler(Class eventType, EventHandler handler) 
    * protected removeHandler(Class eventType, EventHandler handler)
  * Widget delegates all event handling to a new lazily initialized EventHandlers instance.

== Class Diagram ==
http://google-web-toolkit-incubator.googlecode.com/svn/trunk/doc/wiki-support/images/HandlerDesign.jpg
